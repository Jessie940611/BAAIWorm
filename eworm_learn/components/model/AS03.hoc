begintemplate AS03

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon
// Section: Dendrite2, id: Dendrite2, parent: Soma
create Dendrite2
public Dendrite2

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=dendrite_group, groups=[], sections=[Dendrite2]}
objref dendrite_group
// Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Dendrite2, Dendrite2, Dendrite2]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}





proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)
    connect Dendrite2(0), Soma(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( -1.9, -151.40001, -45.649998, 3.976179 ) }
    Soma { pt3dadd( -1.9, -147.423831, -45.649998, 3.976179 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( -1.9, -151.40001, -45.649998, 0.50990194 ) }
    Axon { pt3dadd( -1.9, -152.65, -45.15, 0.50990194 ) }
    Axon { pt3dadd( -1.9, -154.6, -44.3, 0.28284273 ) }
    Axon { pt3dadd( -2.8000002, -156.6, -44.3, 0.34641016 ) }
    Axon { pt3dadd( -5.35, -156.75, -43.85, 0.4358899 ) }
    Axon { pt3dadd( -11.375, -156.52501, -43.399998, 0.73824114 ) }
    Axon { pt3dadd( -19.675, -154.20001, -38.875, 0.6819091 ) }
    Axon { pt3dadd( -23.9, -150.55, -31.675, 0.62649816 ) }
    Axon { pt3dadd( -25.725, -146.675, -24.175, 0.6538348 ) }
    Axon { pt3dadd( -23.9, -142.825, -16.625, 0.6363961 ) }
    Axon { pt3dadd( -19.675, -139.1, -9.425, 0.6819091 ) }
    Axon { pt3dadd( -11.375, -136.8, -4.95, 0.6726812 ) }
    Axon { pt3dadd( -5.4, -136.6, -4.5, 0.56568545 ) }
    Axon { pt3dadd( -2.7, -137.25, -4.5, 0.53851646 ) }
    Axon { pt3dadd( -0.70000005, -139.2, -3.6, 0.56568545 ) }
    Axon { pt3dadd( -0.70000005, -162.75, 9.700001, 0.5744563 ) }
    Axon { pt3dadd( -0.70000005, -207.95, 38.5, 0.5744563 ) }
    Axon { pt3dadd( -0.70000005, -209.85, 39.5, 0.5744563 ) }
    // Section: Dendrite2, id: Dendrite2, parent: Soma (entry count 20/100)
    Dendrite2 { pt3dclear() }
    Dendrite2 { pt3dadd( -1.9, -151.40001, -45.649998, 0.50990194 ) }
    Dendrite2 { pt3dadd( -1.9, -150.15, -46.149998, 0.50990194 ) }
    Dendrite2 { pt3dadd( -1.9, -147.85, -46.95, 0.50990194 ) }
    Dendrite2 { pt3dadd( -1.9, -144.79999, -47.75, 0.5 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=dendrite_group, groups=[], sections=[Dendrite2]}
    dendrite_group = new SectionList()
    Dendrite2 dendrite_group.append()

    // Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Dendrite2, Dendrite2, Dendrite2]}
	all = new SectionList()
	Soma all.append()
	Axon all.append()
	Dendrite2 all.append()
}


proc subsets_inhomogeneous() {
}

proc biophys() {

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
	Soma nseg = 2
	Axon nseg = 18
	Dendrite2 nseg = 4
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate AS03


