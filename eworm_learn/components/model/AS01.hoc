begintemplate AS01

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon
// Section: Dendrite2, id: Dendrite2, parent: Soma
create Dendrite2
public Dendrite2

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=dendrite_group, groups=[], sections=[Dendrite2]}
objref dendrite_group
// Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Dendrite2, Dendrite2, Dendrite2]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}





proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)
    connect Dendrite2(0), Soma(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( -0.275, -229.038, 4.738, 3.0700161 ) }
    Soma { pt3dadd( -0.275, -225.9679839, 4.738, 3.0700161 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( -0.275, -229.038, 4.738, 0.47434163 ) }
    Axon { pt3dadd( -0.8, -228.575, 4.475, 0.47434163 ) }
    Axon { pt3dadd( -4.7, -228.825, 4.475, 0.5700877 ) }
    Axon { pt3dadd( -11.200001, -228.7, 4.9, 0.66332495 ) }
    Axon { pt3dadd( -19.325, -227.0, 9.325, 0.6041523 ) }
    Axon { pt3dadd( -23.5, -224.275, 16.4, 0.65000004 ) }
    Axon { pt3dadd( -25.275002, -221.475, 23.875, 0.75332594 ) }
    Axon { pt3dadd( -23.5, -218.65001, 31.3, 0.64031243 ) }
    Axon { pt3dadd( -19.325, -215.94998, 38.375, 0.61237246 ) }
    Axon { pt3dadd( -11.200001, -214.27501, 42.8, 0.68007356 ) }
    Axon { pt3dadd( -4.7, -214.1, 43.2, 0.56568545 ) }
    Axon { pt3dadd( -1.65, -215.45, 43.5, 0.5830952 ) }
    Axon { pt3dadd( -0.70000005, -217.75, 43.5, 0.5744563 ) }
    Axon { pt3dadd( -0.70000005, -240.9, 52.499996, 0.56568545 ) }
    Axon { pt3dadd( -1.0, -261.1, 59.3, 0.56568545 ) }
    Axon { pt3dadd( -1.0, -264.55, 60.45, 0.6480741 ) }
    Axon { pt3dadd( -1.75, -289.0, 64.4, 0.64031243 ) }
    Axon { pt3dadd( -1.8, -292.19998, 64.700005, 0.56568545 ) }
    // Section: Dendrite2, id: Dendrite2, parent: Soma (entry count 20/100)
    Dendrite2 { pt3dclear() }
    Dendrite2 { pt3dadd( -0.275, -229.038, 4.738, 0.67082036 ) }
    Dendrite2 { pt3dadd( 0.25, -229.5, 5.0, 0.67082036 ) }
    Dendrite2 { pt3dadd( 0.3, -231.5, 6.4, 0.6 ) }
    Dendrite2 { pt3dadd( 0.3, -234.29999, 8.299999, 0.6 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=dendrite_group, groups=[], sections=[Dendrite2]}
    dendrite_group = new SectionList()
    Dendrite2 dendrite_group.append()

    // Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Dendrite2, Dendrite2, Dendrite2]}
	all = new SectionList()
	Soma all.append()
	Axon all.append()
	Dendrite2 all.append()
}


proc subsets_inhomogeneous() {
}

proc biophys() {

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
	Soma nseg = 2
	Axon nseg = 18
	Dendrite2 nseg = 4
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate AS01


