begintemplate VD08

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon
// Section: Neurite2, id: Neurite2, parent: Axon
create Neurite2
public Neurite2
// Section: Neurite3, id: Neurite3, parent: Neurite2
create Neurite3
public Neurite3
// Section: Neurite4, id: Neurite4, parent: Neurite2
create Neurite4
public Neurite4
// Section: Neurite5, id: Neurite5, parent: Axon
create Neurite5
public Neurite5

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=dendrite_group, groups=[], sections=[Neurite2, Neurite3, Neurite4, Neurite5]}
objref dendrite_group
// Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite3, Neurite3, Neurite3, Neurite3, Neurite3, Neurite3, Neurite3, Neurite4, Neurite4, Neurite4, Neurite4, Neurite5, Neurite5, Neurite5, Neurite5, Neurite5, Neurite5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}





proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)
    connect Neurite2(0), Axon(1.0)
    connect Neurite3(0), Neurite2(1.0)
    connect Neurite4(0), Neurite2(1.0)
    connect Neurite5(0), Axon(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( -0.75, 135.09999, 3.9500003, 3.5355341 ) }
    Soma { pt3dadd( -0.75, 138.6355241, 3.9500003, 3.5355341 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( -0.75, 135.09999, 3.9500003, 0.56568545 ) }
    Axon { pt3dadd( -0.70000005, 135.09999, 4.0, 0.56568545 ) }
    Axon { pt3dadd( -0.75, 132.0, 4.1499996, 0.42426404 ) }
    Axon { pt3dadd( -1.4499999, 125.100006, 4.4500003, 0.42426404 ) }
    Axon { pt3dadd( -1.4499999, 116.2, 4.4500003, 0.42426404 ) }
    Axon { pt3dadd( -1.4499999, 88.05, -0.85, 0.4358899 ) }
    Axon { pt3dadd( -1.4499999, 85.85, -1.7, 0.50990194 ) }
    // Section: Neurite2, id: Neurite2, parent: Axon (entry count 9/100)
    Neurite2 { pt3dclear() }
    Neurite2 { pt3dadd( -1.4499999, 85.85, -1.7, 0.50990194 ) }
    Neurite2 { pt3dadd( -1.6, 85.675, -1.75, 0.5408327 ) }
    Neurite2 { pt3dadd( -1.8, 85.65, -1.7750001, 0.39051247 ) }
    Neurite2 { pt3dadd( -2.8000002, 85.65, -1.7, 0.5 ) }
    Neurite2 { pt3dadd( -11.625, 85.775, -2.4, 0.6670832 ) }
    Neurite2 { pt3dadd( -20.125, 84.55, 2.8999999, 0.6103278 ) }
    Neurite2 { pt3dadd( -24.5, 82.65, 11.3, 0.64031243 ) }
    Neurite2 { pt3dadd( -26.374998, 80.6, 20.074999, 0.7516648 ) }
    Neurite2 { pt3dadd( -24.5, 78.6, 28.85, 0.67082036 ) }
    Neurite2 { pt3dadd( -20.125, 76.65, 37.25, 0.68007356 ) }
    Neurite2 { pt3dadd( -11.625, 75.45, 42.5, 0.6576473 ) }
    Neurite2 { pt3dadd( -1.8, 75.3, 42.8, 0.56568545 ) }
    Neurite2 { pt3dadd( -1.1, 75.4, 42.574997, 0.5678908 ) }
    Neurite2 { pt3dadd( -0.9, 75.45, 42.449997, 0.90553856 ) }
    // Section: Neurite3, id: Neurite3, parent: Neurite2 (entry count 23/100)
    Neurite3 { pt3dclear() }
    Neurite3 { pt3dadd( -0.9, 75.45, 42.449997, 0.90553856 ) }
    Neurite3 { pt3dadd( -0.70000005, 75.85, 42.6, 0.5744563 ) }
    Neurite3 { pt3dadd( -0.70000005, 78.0, 43.399998, 0.6 ) }
    Neurite3 { pt3dadd( -0.70000005, 88.1, 47.350002, 0.53851646 ) }
    Neurite3 { pt3dadd( -0.70000005, 91.0, 48.5, 0.6 ) }
    Neurite3 { pt3dadd( -0.70000005, 106.55, 50.5, 0.5744563 ) }
    Neurite3 { pt3dadd( -0.70000005, 123.950005, 53.45, 0.6480741 ) }
    Neurite3 { pt3dadd( -0.70000005, 136.5, 52.499996, 0.56568545 ) }
    // Section: Neurite4, id: Neurite4, parent: Neurite2 (entry count 31/100)
    Neurite4 { pt3dclear() }
    Neurite4 { pt3dadd( -0.9, 75.45, 42.449997, 0.90553856 ) }
    Neurite4 { pt3dadd( -0.70000005, 75.05, 42.3, 0.5744563 ) }
    Neurite4 { pt3dadd( -0.70000005, 72.799995, 41.350002, 0.53851646 ) }
    Neurite4 { pt3dadd( -0.70000005, 44.350002, 30.199999, 0.5744563 ) }
    Neurite4 { pt3dadd( -0.70000005, 39.6, 28.400002, 0.6 ) }
    // Section: Neurite5, id: Neurite5, parent: Axon (entry count 36/100)
    Neurite5 { pt3dclear() }
    Neurite5 { pt3dadd( -1.4499999, 85.85, -1.7, 0.50990194 ) }
    Neurite5 { pt3dadd( -1.4499999, 85.5, -1.8, 0.5 ) }
    Neurite5 { pt3dadd( -1.4499999, 84.2, -2.3, 0.5 ) }
    Neurite5 { pt3dadd( -1.85, 77.8, -6.3500004, 0.42426404 ) }
    Neurite5 { pt3dadd( -2.2, 69.5, -11.85, 0.5 ) }
    Neurite5 { pt3dadd( -5.85, 65.525, -10.75, 0.42720017 ) }
    Neurite5 { pt3dadd( -10.375, 61.85, -12.65, 0.47169906 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=dendrite_group, groups=[], sections=[Neurite2, Neurite3, Neurite4, Neurite5]}
    dendrite_group = new SectionList()
    Neurite2 dendrite_group.append()
    Neurite3 dendrite_group.append()
    Neurite4 dendrite_group.append()
    Neurite5 dendrite_group.append()

    // Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite3, Neurite3, Neurite3, Neurite3, Neurite3, Neurite3, Neurite3, Neurite4, Neurite4, Neurite4, Neurite4, Neurite5, Neurite5, Neurite5, Neurite5, Neurite5, Neurite5]}
	all = new SectionList()
	Soma all.append()
	Axon all.append()
	Neurite2 all.append()
	Neurite3 all.append()
	Neurite4 all.append()
	Neurite5 all.append()
}


proc subsets_inhomogeneous() {
}

proc biophys() {

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
	Soma nseg = 2
	Axon nseg = 7
	Neurite2 nseg = 14
	Neurite3 nseg = 8
	Neurite4 nseg = 5
	Neurite5 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate VD08


