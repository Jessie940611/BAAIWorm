begintemplate VC04

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon
// Section: Neurite2, id: Neurite2, parent: Axon
create Neurite2
public Neurite2
// Section: Neurite3, id: Neurite3, parent: Neurite2
create Neurite3
public Neurite3
// Section: Neurite4, id: Neurite4, parent: Neurite2
create Neurite4
public Neurite4
// Section: Neurite5, id: Neurite5, parent: Neurite2
create Neurite5
public Neurite5
// Section: Neurite6, id: Neurite6, parent: Neurite2
create Neurite6
public Neurite6
// Section: Neurite7, id: Neurite7, parent: Axon
create Neurite7
public Neurite7
// Section: Neurite8, id: Neurite8, parent: Neurite7
create Neurite8
public Neurite8
// Section: Neurite9, id: Neurite9, parent: Neurite7
create Neurite9
public Neurite9
// Section: Neurite10, id: Neurite10, parent: Neurite7
create Neurite10
public Neurite10
// Section: Neurite11, id: Neurite11, parent: Neurite7
create Neurite11
public Neurite11

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=dendrite_group, groups=[], sections=[Neurite2, Neurite3, Neurite4, Neurite5, Neurite6, Neurite7, Neurite8, Neurite9, Neurite10, Neurite11]}
objref dendrite_group
// Group: {name=all, sections=[Soma, Axon, Axon, Neurite2, Neurite2, Neurite2, Neurite2, Neurite3, Neurite3, Neurite3, Neurite4, Neurite4, Neurite4, Neurite4, Neurite5, Neurite5, Neurite5, Neurite5, Neurite6, Neurite7, Neurite7, Neurite7, Neurite7, Neurite8, Neurite8, Neurite8, Neurite8, Neurite9, Neurite9, Neurite9, Neurite10, Neurite10, Neurite10, Neurite10, Neurite11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}





proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)
    connect Neurite2(0), Axon(1.0)
    connect Neurite3(0), Neurite2(1.0)
    connect Neurite4(0), Neurite2(1.0)
    connect Neurite5(0), Neurite2(1.0)
    connect Neurite6(0), Neurite2(1.0)
    connect Neurite7(0), Axon(1.0)
    connect Neurite8(0), Neurite7(1.0)
    connect Neurite9(0), Neurite7(1.0)
    connect Neurite10(0), Neurite7(1.0)
    connect Neurite11(0), Neurite7(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( -1.15, 43.85, -24.2, 3.5749125 ) }
    Soma { pt3dadd( -1.15, 47.424912500000005, -24.2, 3.5749125 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( -1.15, 43.85, -24.2, 0.46904156 ) }
    Axon { pt3dadd( -1.15, 43.9, -24.15, 0.46904156 ) }
    Axon { pt3dadd( -1.15, 46.55, -22.7, 0.6480741 ) }
    // Section: Neurite2, id: Neurite2, parent: Axon (entry count 5/100)
    Neurite2 { pt3dclear() }
    Neurite2 { pt3dadd( -1.15, 46.55, -22.7, 0.6480741 ) }
    Neurite2 { pt3dadd( -1.3000001, 46.55, -22.675, 0.5024938 ) }
    Neurite2 { pt3dadd( -1.4499999, 46.9, -22.400002, 0.41231057 ) }
    Neurite2 { pt3dadd( -2.85, 48.0, -20.85, 0.37416574 ) }
    Neurite2 { pt3dadd( -3.5, 49.5, -17.9, 0.28284273 ) }
    // Section: Neurite3, id: Neurite3, parent: Neurite2 (entry count 10/100)
    Neurite3 { pt3dclear() }
    Neurite3 { pt3dadd( -3.5, 49.5, -17.9, 0.28284273 ) }
    Neurite3 { pt3dadd( -3.5, 49.55, -17.65, 0.37416574 ) }
    Neurite3 { pt3dadd( -3.5, 50.050003, -14.599999, 0.36055514 ) }
    Neurite3 { pt3dadd( -3.5, 50.1, -14.35, 0.3 ) }
    // Section: Neurite4, id: Neurite4, parent: Neurite2 (entry count 14/100)
    Neurite4 { pt3dclear() }
    Neurite4 { pt3dadd( -3.5, 49.5, -17.9, 0.28284273 ) }
    Neurite4 { pt3dadd( -3.5, 49.649998, -17.800001, 0.3 ) }
    Neurite4 { pt3dadd( -3.5, 49.85, -17.800001, 0.3 ) }
    Neurite4 { pt3dadd( -3.5, 51.55, -15.150001, 0.37416574 ) }
    Neurite4 { pt3dadd( -3.5, 51.65, -14.1, 0.36055514 ) }
    // Section: Neurite5, id: Neurite5, parent: Neurite2 (entry count 19/100)
    Neurite5 { pt3dclear() }
    Neurite5 { pt3dadd( -3.5, 49.5, -17.9, 0.28284273 ) }
    Neurite5 { pt3dadd( -3.5, 49.399998, -17.75, 0.36055514 ) }
    Neurite5 { pt3dadd( -3.5, 49.2, -17.65, 0.3 ) }
    Neurite5 { pt3dadd( -3.5, 48.35, -15.000001, 0.36055514 ) }
    Neurite5 { pt3dadd( -3.5, 48.45, -14.0, 0.36055514 ) }
    // Section: Neurite6, id: Neurite6, parent: Neurite2 (entry count 24/100)
    Neurite6 { pt3dclear() }
    Neurite6 { pt3dadd( -3.5, 49.5, -17.9, 0.28284273 ) }
    Neurite6 { pt3dadd( -3.5, 49.55, -17.65, 0.37416574 ) }
    // Section: Neurite7, id: Neurite7, parent: Axon (entry count 26/100)
    Neurite7 { pt3dclear() }
    Neurite7 { pt3dadd( -1.15, 46.55, -22.7, 0.6480741 ) }
    Neurite7 { pt3dadd( -1.0, 46.55, -22.7, 0.45825756 ) }
    Neurite7 { pt3dadd( -0.8, 46.9, -22.400002, 0.34641016 ) }
    Neurite7 { pt3dadd( 0.6, 48.0, -20.85, 0.3 ) }
    Neurite7 { pt3dadd( 1.2, 49.5, -17.9, 0.28284273 ) }
    // Section: Neurite8, id: Neurite8, parent: Neurite7 (entry count 31/100)
    Neurite8 { pt3dclear() }
    Neurite8 { pt3dadd( 1.2, 49.5, -17.9, 0.28284273 ) }
    Neurite8 { pt3dadd( 1.2, 49.649998, -17.800001, 0.3 ) }
    Neurite8 { pt3dadd( 1.2, 49.85, -17.800001, 0.3 ) }
    Neurite8 { pt3dadd( 1.2, 51.55, -15.150001, 0.37416574 ) }
    Neurite8 { pt3dadd( 1.2, 51.65, -14.1, 0.36055514 ) }
    // Section: Neurite9, id: Neurite9, parent: Neurite7 (entry count 36/100)
    Neurite9 { pt3dclear() }
    Neurite9 { pt3dadd( 1.2, 49.5, -17.9, 0.28284273 ) }
    Neurite9 { pt3dadd( 1.2, 49.55, -17.65, 0.37416574 ) }
    Neurite9 { pt3dadd( 1.2, 50.050003, -14.599999, 0.36055514 ) }
    Neurite9 { pt3dadd( 1.2, 50.1, -14.35, 0.3 ) }
    // Section: Neurite10, id: Neurite10, parent: Neurite7 (entry count 40/100)
    Neurite10 { pt3dclear() }
    Neurite10 { pt3dadd( 1.2, 49.5, -17.9, 0.28284273 ) }
    Neurite10 { pt3dadd( 1.2, 49.399998, -17.75, 0.36055514 ) }
    Neurite10 { pt3dadd( 1.2, 49.2, -17.65, 0.3 ) }
    Neurite10 { pt3dadd( 1.2, 48.35, -15.000001, 0.36055514 ) }
    Neurite10 { pt3dadd( 1.2, 48.45, -14.0, 0.36055514 ) }
    // Section: Neurite11, id: Neurite11, parent: Neurite7 (entry count 45/100)
    Neurite11 { pt3dclear() }
    Neurite11 { pt3dadd( 1.2, 49.5, -17.9, 0.28284273 ) }
    Neurite11 { pt3dadd( 1.2, 49.55, -17.65, 0.37416574 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=dendrite_group, groups=[], sections=[Neurite2, Neurite3, Neurite4, Neurite5, Neurite6, Neurite7, Neurite8, Neurite9, Neurite10, Neurite11]}
    dendrite_group = new SectionList()
    Neurite2 dendrite_group.append()
    Neurite3 dendrite_group.append()
    Neurite4 dendrite_group.append()
    Neurite5 dendrite_group.append()
    Neurite6 dendrite_group.append()
    Neurite7 dendrite_group.append()
    Neurite8 dendrite_group.append()
    Neurite9 dendrite_group.append()
    Neurite10 dendrite_group.append()
    Neurite11 dendrite_group.append()

    // Group: {name=all, sections=[Soma, Axon, Axon, Neurite2, Neurite2, Neurite2, Neurite2, Neurite3, Neurite3, Neurite3, Neurite4, Neurite4, Neurite4, Neurite4, Neurite5, Neurite5, Neurite5, Neurite5, Neurite6, Neurite7, Neurite7, Neurite7, Neurite7, Neurite8, Neurite8, Neurite8, Neurite8, Neurite9, Neurite9, Neurite9, Neurite10, Neurite10, Neurite10, Neurite10, Neurite11]}
	all = new SectionList()
	Soma all.append()
	Axon all.append()
	Neurite2 all.append()
	Neurite3 all.append()
	Neurite4 all.append()
	Neurite5 all.append()
	Neurite6 all.append()
	Neurite7 all.append()
	Neurite8 all.append()
	Neurite9 all.append()
	Neurite10 all.append()
	Neurite11 all.append()
}


proc subsets_inhomogeneous() {
}

proc biophys() {

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
	Soma nseg = 2
	Axon nseg = 3
	Neurite2 nseg = 5
	Neurite3 nseg = 4
	Neurite4 nseg = 5
	Neurite5 nseg = 5
	Neurite6 nseg = 2
	Neurite7 nseg = 5
	Neurite8 nseg = 5
	Neurite9 nseg = 4
	Neurite10 nseg = 5
	Neurite11 nseg = 2
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate VC04


