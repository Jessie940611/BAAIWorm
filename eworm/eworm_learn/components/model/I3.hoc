begintemplate I3

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon
// Section: Dendrite2, id: Dendrite2, parent: Soma
create Dendrite2
public Dendrite2
// Section: Neurite3, id: Neurite3, parent: Axon
create Neurite3
public Neurite3
// Section: Neurite4, id: Neurite4, parent: Axon
create Neurite4
public Neurite4

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=dendrite_group, groups=[], sections=[Dendrite2, Neurite3, Neurite4]}
objref dendrite_group
// Group: {name=all, sections=[Soma, Axon, Axon, Axon, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Neurite3, Neurite3, Neurite4, Neurite4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}





proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)
    connect Dendrite2(0), Soma(1.0)
    connect Neurite3(0), Axon(1.0)
    connect Neurite4(0), Axon(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( -2.05, -296.55002, 58.25, 3.541186 ) }
    Soma { pt3dadd( -2.05, -293.00883400000004, 58.25, 3.541186 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( -2.05, -296.55002, 58.25, 0.4358899 ) }
    Axon { pt3dadd( -2.05, -295.25, 58.149998, 0.4358899 ) }
    Axon { pt3dadd( -2.05, -292.65, 57.85, 0.4358899 ) }
    Axon { pt3dadd( -2.05, -290.19998, 57.65, 0.42426404 ) }
    // Section: Dendrite2, id: Dendrite2, parent: Soma (entry count 6/100)
    Dendrite2 { pt3dclear() }
    Dendrite2 { pt3dadd( -2.05, -296.55002, 58.25, 0.4358899 ) }
    Dendrite2 { pt3dadd( -2.05, -297.84998, 58.350002, 0.4358899 ) }
    Dendrite2 { pt3dadd( -2.05, -300.1, 58.350002, 0.42426404 ) }
    Dendrite2 { pt3dadd( -2.05, -304.5, 58.45, 0.42426404 ) }
    Dendrite2 { pt3dadd( -2.05, -337.0, 60.45, 0.42426404 ) }
    Dendrite2 { pt3dadd( -2.05, -337.4, 60.350002, 0.42426404 ) }
    Dendrite2 { pt3dadd( -2.05, -341.5, 59.95, 0.46904156 ) }
    Dendrite2 { pt3dadd( -2.05, -342.0, 59.600002, 0.41231057 ) }
    // Section: Neurite3, id: Neurite3, parent: Axon (entry count 14/100)
    Neurite3 { pt3dclear() }
    Neurite3 { pt3dadd( -2.05, -290.19998, 57.65, 0.42426404 ) }
    Neurite3 { pt3dadd( -2.05, -290.05002, 57.8, 0.42426404 ) }
    Neurite3 { pt3dadd( -2.05, -290.05002, 58.2, 0.42426404 ) }
    // Section: Neurite4, id: Neurite4, parent: Axon (entry count 17/100)
    Neurite4 { pt3dclear() }
    Neurite4 { pt3dadd( -2.05, -290.19998, 57.65, 0.42426404 ) }
    Neurite4 { pt3dadd( -2.05, -290.1, 57.5, 0.36055514 ) }
    Neurite4 { pt3dadd( -2.05, -290.15, 56.950005, 0.4358899 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=dendrite_group, groups=[], sections=[Dendrite2, Neurite3, Neurite4]}
    dendrite_group = new SectionList()
    Dendrite2 dendrite_group.append()
    Neurite3 dendrite_group.append()
    Neurite4 dendrite_group.append()

    // Group: {name=all, sections=[Soma, Axon, Axon, Axon, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Neurite3, Neurite3, Neurite4, Neurite4]}
	all = new SectionList()
	Soma all.append()
	Axon all.append()
	Dendrite2 all.append()
	Neurite3 all.append()
	Neurite4 all.append()
}


proc subsets_inhomogeneous() {
}

proc biophys() {

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
	Soma nseg = 2
	Axon nseg = 4
	Dendrite2 nseg = 8
	Neurite3 nseg = 3
	Neurite4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate I3


