begintemplate OLLL

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon
// Section: Dendrite2, id: Dendrite2, parent: Soma
create Dendrite2
public Dendrite2
// Section: Neurite3, id: Neurite3, parent: Axon
create Neurite3
public Neurite3
// Section: Neurite4, id: Neurite4, parent: Axon
create Neurite4
public Neurite4

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=dendrite_group, groups=[], sections=[Dendrite2, Neurite3, Neurite4]}
objref dendrite_group
// Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Neurite3, Neurite3, Neurite3, Neurite3, Neurite3, Neurite3, Neurite4, Neurite4, Neurite4, Neurite4, Neurite4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}





proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)
    connect Dendrite2(0), Soma(1.0)
    connect Neurite3(0), Axon(1.0)
    connect Neurite4(0), Axon(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( 4.4, -283.9, 50.024998, 3.4307435 ) }
    Soma { pt3dadd( 4.4, -280.4692565, 50.024998, 3.4307435 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( 4.4, -283.9, 50.024998, 0.5744563 ) }
    Axon { pt3dadd( 4.4, -282.75, 49.8, 0.5744563 ) }
    Axon { pt3dadd( 4.4, -282.0, 49.6, 0.6 ) }
    Axon { pt3dadd( 3.7, -280.45, 48.949997, 0.50990194 ) }
    Axon { pt3dadd( 3.8, -279.15002, 48.45, 0.50990194 ) }
    Axon { pt3dadd( 6.025, -277.375, 47.8, 0.49497476 ) }
    Axon { pt3dadd( 7.125, -275.9, 47.2, 0.5123476 ) }
    Axon { pt3dadd( 6.7500005, -273.6, 46.3, 0.5 ) }
    Axon { pt3dadd( 6.3500004, -273.15, 46.2, 0.50990194 ) }
    Axon { pt3dadd( 5.7999997, -273.15, 46.2, 0.5 ) }
    Axon { pt3dadd( 5.1, -273.5, 46.325, 0.3774917 ) }
    Axon { pt3dadd( 4.9, -274.05, 46.675, 0.5408327 ) }
    Axon { pt3dadd( 4.9, -274.25, 46.775, 0.41533118 ) }
    // Section: Dendrite2, id: Dendrite2, parent: Soma (entry count 15/100)
    Dendrite2 { pt3dclear() }
    Dendrite2 { pt3dadd( 4.4, -283.9, 50.024998, 0.6480741 ) }
    Dendrite2 { pt3dadd( 4.4, -285.05002, 50.25, 0.6480741 ) }
    Dendrite2 { pt3dadd( 4.95, -285.80002, 50.35, 0.70710677 ) }
    Dendrite2 { pt3dadd( 7.1000004, -290.19998, 51.1, 0.56568545 ) }
    Dendrite2 { pt3dadd( 7.9000006, -293.19998, 52.100002, 0.56568545 ) }
    Dendrite2 { pt3dadd( 7.9000006, -296.6, 52.8, 0.56568545 ) }
    Dendrite2 { pt3dadd( 7.5000005, -299.8, 53.3, 0.56568545 ) }
    Dendrite2 { pt3dadd( 6.2, -304.6, 54.100002, 0.56568545 ) }
    Dendrite2 { pt3dadd( 5.0, -320.15, 56.0, 0.5744563 ) }
    Dendrite2 { pt3dadd( 3.1, -331.95, 57.200005, 0.5744563 ) }
    Dendrite2 { pt3dadd( 2.3, -337.15, 57.8, 0.5744563 ) }
    Dendrite2 { pt3dadd( 1.3000001, -342.8, 58.600002, 0.56568545 ) }
    Dendrite2 { pt3dadd( 0.70000005, -348.6, 58.899998, 0.56568545 ) }
    Dendrite2 { pt3dadd( 0.70000005, -349.44998, 58.999996, 0.5744563 ) }
    // Section: Neurite3, id: Neurite3, parent: Axon (entry count 29/100)
    Neurite3 { pt3dclear() }
    Neurite3 { pt3dadd( 4.9, -274.25, 46.775, 0.41533118 ) }
    Neurite3 { pt3dadd( 4.9249997, -274.35, 46.6, 0.39051247 ) }
    Neurite3 { pt3dadd( 4.95, -274.2, 45.5, 0.36055514 ) }
    Neurite3 { pt3dadd( 4.4, -273.775, 42.449997, 0.33541018 ) }
    Neurite3 { pt3dadd( 2.85, -273.42502, 39.825, 0.44158804 ) }
    Neurite3 { pt3dadd( 0.575, -273.15, 38.125, 0.46368092 ) }
    Neurite3 { pt3dadd( -2.2, -273.05, 37.475, 0.39051247 ) }
    // Section: Neurite4, id: Neurite4, parent: Axon (entry count 36/100)
    Neurite4 { pt3dclear() }
    Neurite4 { pt3dadd( 4.9, -274.25, 46.775, 0.41533118 ) }
    Neurite4 { pt3dadd( 4.8500004, -274.44998, 46.95, 0.4358899 ) }
    Neurite4 { pt3dadd( 4.375, -274.65, 48.525, 0.5244044 ) }
    Neurite4 { pt3dadd( 2.85, -275.0, 51.1, 0.45825756 ) }
    Neurite4 { pt3dadd( 0.55, -275.3, 52.824997, 0.48218253 ) }
    Neurite4 { pt3dadd( -2.2, -275.35, 53.399998, 0.5 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=dendrite_group, groups=[], sections=[Dendrite2, Neurite3, Neurite4]}
    dendrite_group = new SectionList()
    Dendrite2 dendrite_group.append()
    Neurite3 dendrite_group.append()
    Neurite4 dendrite_group.append()

    // Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Dendrite2, Neurite3, Neurite3, Neurite3, Neurite3, Neurite3, Neurite3, Neurite4, Neurite4, Neurite4, Neurite4, Neurite4]}
	all = new SectionList()
	Soma all.append()
	Axon all.append()
	Dendrite2 all.append()
	Neurite3 all.append()
	Neurite4 all.append()
}


proc subsets_inhomogeneous() {
}

proc biophys() {

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
	Soma nseg = 2
	Axon nseg = 13
	Dendrite2 nseg = 14
	Neurite3 nseg = 7
	Neurite4 nseg = 6
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate OLLL


