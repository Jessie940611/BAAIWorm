begintemplate AIBR

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}





proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( -6.9, -266.2, 37.0, 2.5455844 ) }
    Soma { pt3dadd( -6.9, -263.6544156, 37.0, 2.5455844 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( -6.9, -266.2, 37.0, 0.70710677 ) }
    Axon { pt3dadd( -6.85, -266.25, 36.9, 0.70710677 ) }
    Axon { pt3dadd( -7.4, -265.85, 33.575, 0.5024938 ) }
    Axon { pt3dadd( -7.900001, -265.5, 30.05, 0.5 ) }
    Axon { pt3dadd( -5.325, -266.7, 28.15, 0.4387482 ) }
    Axon { pt3dadd( -3.05, -267.7, 26.575, 0.5024938 ) }
    Axon { pt3dadd( -2.425, -268.45, 26.9, 0.5408327 ) }
    Axon { pt3dadd( -2.15, -271.3, 30.65, 0.50990194 ) }
    Axon { pt3dadd( -2.1, -272.7, 35.95, 0.53851646 ) }
    Axon { pt3dadd( -3.2, -273.075, 37.55, 0.5024938 ) }
    Axon { pt3dadd( -4.7, -272.95, 38.15, 0.42426404 ) }
    Axon { pt3dadd( -7.075, -272.75, 39.825, 0.39370042 ) }
    Axon { pt3dadd( -8.625, -273.15, 42.45, 0.40311286 ) }
    Axon { pt3dadd( -9.15, -273.55, 45.5, 0.42426404 ) }
    Axon { pt3dadd( -8.6, -274.025, 48.525, 0.35355338 ) }
    Axon { pt3dadd( -7.1, -274.35, 51.1, 0.41231057 ) }
    Axon { pt3dadd( -4.75, -274.65, 52.825, 0.40311286 ) }
    Axon { pt3dadd( -2.525, -274.55, 53.1, 0.52201533 ) }
    Axon { pt3dadd( -2.05, -274.575, 53.25, 0.5678908 ) }
    Axon { pt3dadd( -2.05, -275.3, 53.4, 0.5 ) }
    Axon { pt3dadd( -2.0, -276.0, 53.3, 0.66332495 ) }
    Axon { pt3dadd( -1.5, -276.1, 53.15, 0.36055514 ) }
    Axon { pt3dadd( 0.65, -276.05, 52.825, 0.40311286 ) }
    Axon { pt3dadd( 2.95, -275.75, 51.1, 0.46904156 ) }
    Axon { pt3dadd( 4.475, -275.4, 48.525, 0.49497476 ) }
    Axon { pt3dadd( 5.05, -274.95, 45.5, 0.42426404 ) }
    Axon { pt3dadd( 4.525, -274.55, 42.45, 0.40311286 ) }
    Axon { pt3dadd( 2.95, -274.15, 39.825, 0.47169906 ) }
    Axon { pt3dadd( 0.625, -274.05, 38.125, 0.46368092 ) }
    Axon { pt3dadd( -1.05, -273.875, 37.4, 0.4609772 ) }
    Axon { pt3dadd( -1.45, -273.475, 35.6, 0.26925823 ) }
    Axon { pt3dadd( -1.5, -272.425, 34.45, 0.4387482 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon]}
	all = new SectionList()
	Soma all.append()
	Axon all.append()
}


proc subsets_inhomogeneous() {
}

proc biophys() {

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
	Soma nseg = 2
	Axon nseg = 32
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate AIBR


