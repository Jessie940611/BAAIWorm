begintemplate VD12

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon
// Section: Neurite2, id: Neurite2, parent: Axon
create Neurite2
public Neurite2
// Section: Neurite3, id: Neurite3, parent: Neurite2
create Neurite3
public Neurite3
// Section: Neurite4, id: Neurite4, parent: Neurite2
create Neurite4
public Neurite4
// Section: Neurite5, id: Neurite5, parent: Axon
create Neurite5
public Neurite5

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=dendrite_group, groups=[], sections=[Neurite2, Neurite3, Neurite4, Neurite5]}
objref dendrite_group
// Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite3, Neurite3, Neurite3, Neurite4, Neurite4, Neurite4, Neurite4, Neurite4, Neurite5, Neurite5, Neurite5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}





proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)
    connect Neurite2(0), Axon(1.0)
    connect Neurite3(0), Neurite2(1.0)
    connect Neurite4(0), Neurite2(1.0)
    connect Neurite5(0), Axon(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( -0.75, 345.5, -23.15, 3.2588341 ) }
    Soma { pt3dadd( -0.75, 348.7588341, -23.15, 3.2588341 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( -0.75, 345.5, -23.15, 0.71414286 ) }
    Axon { pt3dadd( -0.75, 345.45, -23.15, 0.71414286 ) }
    Axon { pt3dadd( -0.7, 341.0, -23.75, 0.64031243 ) }
    Axon { pt3dadd( -1.45, 322.9, -26.0, 0.5 ) }
    Axon { pt3dadd( -1.45, 317.6, -26.5, 0.5 ) }
    Axon { pt3dadd( -1.45, 302.1, -25.85, 0.42426404 ) }
    // Section: Neurite2, id: Neurite2, parent: Axon (entry count 8/100)
    Neurite2 { pt3dclear() }
    Neurite2 { pt3dadd( -1.45, 302.1, -25.85, 0.42426404 ) }
    Neurite2 { pt3dadd( -1.6, 301.9, -25.85, 0.5 ) }
    Neurite2 { pt3dadd( -1.9, 301.9, -25.85, 0.36055514 ) }
    Neurite2 { pt3dadd( -4.3, 301.9, -26.15, 0.36055514 ) }
    Neurite2 { pt3dadd( -10.0, 301.9, -25.7, 0.6324555 ) }
    Neurite2 { pt3dadd( -17.1, 302.0, -21.375, 0.53150725 ) }
    Neurite2 { pt3dadd( -20.725, 302.225, -14.4, 0.45276928 ) }
    Neurite2 { pt3dadd( -22.3, 302.425, -7.2, 0.60207975 ) }
    Neurite2 { pt3dadd( -20.725, 302.625, 0.0, 0.49497476 ) }
    Neurite2 { pt3dadd( -17.1, 302.8, 6.9, 0.56568545 ) }
    Neurite2 { pt3dadd( -10.0, 302.95, 11.275, 0.5937171 ) }
    Neurite2 { pt3dadd( -4.3, 302.95, 11.7, 0.5 ) }
    Neurite2 { pt3dadd( -1.1, 302.9, 11.075, 0.4924429 ) }
    Neurite2 { pt3dadd( -0.9, 302.9, 11.05, 0.5 ) }
    // Section: Neurite3, id: Neurite3, parent: Neurite2 (entry count 22/100)
    Neurite3 { pt3dclear() }
    Neurite3 { pt3dadd( -0.9, 302.9, 11.05, 0.5 ) }
    Neurite3 { pt3dadd( -0.7, 302.75, 11.1, 0.5744563 ) }
    Neurite3 { pt3dadd( -0.7, 293.55, 12.6, 0.5744563 ) }
    Neurite3 { pt3dadd( -0.7, 288.15, 13.4, 0.5744563 ) }
    // Section: Neurite4, id: Neurite4, parent: Neurite2 (entry count 26/100)
    Neurite4 { pt3dclear() }
    Neurite4 { pt3dadd( -0.9, 302.9, 11.05, 0.5 ) }
    Neurite4 { pt3dadd( -0.7, 303.05, 11.0, 0.5744563 ) }
    Neurite4 { pt3dadd( -0.7, 321.65, 8.1, 0.5744563 ) }
    Neurite4 { pt3dadd( -0.7, 326.2, 8.1, 0.56568545 ) }
    Neurite4 { pt3dadd( -0.7, 338.6, 8.299999, 0.56568545 ) }
    Neurite4 { pt3dadd( -0.7, 342.9, 8.4, 0.56568545 ) }
    // Section: Neurite5, id: Neurite5, parent: Axon (entry count 32/100)
    Neurite5 { pt3dclear() }
    Neurite5 { pt3dadd( -1.45, 302.1, -25.85, 0.42426404 ) }
    Neurite5 { pt3dadd( -1.45, 301.7, -25.85, 0.42426404 ) }
    Neurite5 { pt3dadd( -1.45, 293.2, -25.5, 0.5 ) }
    Neurite5 { pt3dadd( -1.45, 287.3, -25.0, 0.5 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=dendrite_group, groups=[], sections=[Neurite2, Neurite3, Neurite4, Neurite5]}
    dendrite_group = new SectionList()
    Neurite2 dendrite_group.append()
    Neurite3 dendrite_group.append()
    Neurite4 dendrite_group.append()
    Neurite5 dendrite_group.append()

    // Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite2, Neurite3, Neurite3, Neurite3, Neurite4, Neurite4, Neurite4, Neurite4, Neurite4, Neurite5, Neurite5, Neurite5]}
	all = new SectionList()
	Soma all.append()
	Axon all.append()
	Neurite2 all.append()
	Neurite3 all.append()
	Neurite4 all.append()
	Neurite5 all.append()
}


proc subsets_inhomogeneous() {
}

proc biophys() {

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
	Soma nseg = 2
	Axon nseg = 6
	Neurite2 nseg = 14
	Neurite3 nseg = 4
	Neurite4 nseg = 6
	Neurite5 nseg = 4
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate VD12


